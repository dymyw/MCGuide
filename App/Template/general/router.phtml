<?php /* @var $this \App\Hint\HelperManager */ ?>
<h1><?php echo $title?></h1>
<p>一般来说，URI 字符串有着和它唯一对应的控制器(controller)类/方法：</p>
<code>example.com/index.php/<var>class</var>/<var>method</var></code>
<p>执行 <samp>App/Class/Controller/classController::methodAction()</samp></p>
<ul>
    <li>然而在一些例子中，你也许想重定向这种关系来调用一个不同的类/方法(class/method)，而不是与 URL 一一对应的调用</li>
    <li>又或者你需要传递一些参数给类中的方法，如何把参数巧妙的融合在 URL 中?</li>
</ul>

<h2>设定你自己的路由规则</h2>
<p>路由规则定义在 <dfn>App/Config/Router.php</dfn> 文件中，路由规则数组的 value 表示匹配 URL 的规则，key 代表调用的类/方法(class/method)</p>

<br />
<h3>举个例子</h3>
<code>
'eyeglasses/gender'&nbsp;=&gt;&nbsp;[<br />
&nbsp;&nbsp;&nbsp;&nbsp;'<var>&lt;gender:men|women&gt;</var>-eyeglasses-page-<var>&lt;page:\d+&gt;</var>.html',<br />
],
</code>
<p>请求 URL：</p>
<code>example.com/index/<var>men</var>-eyeglasses-page-<var>12</var>.html</code>
<p>匹配了 <dfn>eyeglasses/gender</dfn> 的路由规则，执行 <samp>App/Class/Controller/eyeglassesController::genderAction()</samp>，并把参数数组 <samp>['gender' => 'men', 'page' => 12]</samp> 传递给方法</p>

<br />
<h3>路由参数</h3>
<p>定义路由参数的一般格式：</p>
<code style="font-size: 16px">
    <samp><?php echo $this->escape('<')?></samp><var>分隔符</var><dfn>参数名</dfn><samp>参数数量标识</samp>:<dfn>参数匹配规则</dfn><var>分隔符</var><samp><?php echo $this->escape('>')?></samp>
</code>
<code style="font-size: 16px">
    <samp><?php echo $this->escape('<')?></samp><kbd>*</kbd>:<dfn>参数名匹配规则</dfn><samp><?php echo $this->escape('>')?></samp>
</code>
<p>
    <dfn>参数名</dfn> 的两种情况：
    <ul>
        <li>第一种，直接写明了</li>
        <li>第二种，根据参数名匹配规则去匹配，数组参数，必须，参数匹配规则为 <?php echo $this->escape('[^\-]+')?></li>
    </ul>
</p>
<p>
    <samp>参数数量标识</samp> 有四种：
    <ul>
        <li>(?)         非数组参数     非必须</li>
        <li>(notset)    非数组参数     必须</li>
        <li>(*)         数组参数       非必须</li>
        <li>(+)         数组参数       必须</li>
    </ul>
</p>
<p><dfn>参数匹配规则</dfn> 为 正则表达式</p>
<p><var>分隔符</var> 为 ~，一般配合非必须参数使用。当非必须参数存在时，定义分隔符的位置</p>

<br />
<h3>再举一个复杂的例子</h3>
<code style="font-size: 16px">
'eyeglasses/list'&nbsp;=&gt;&nbsp;[<br />
&nbsp;&nbsp;&nbsp;&nbsp;<samp>'&lt;</samp><dfn>attrs</dfn><samp>+</samp>:<dfn>[^\-]+</dfn><samp>&gt;</samp>-<samp>&lt;</samp><dfn>gender</dfn>:<dfn>men|women</dfn><samp>&gt;</samp>-<samp>&lt;</samp><dfn>tags</dfn><samp>*</samp>:<dfn>[^\-]+</dfn><var>~</var><samp>&gt;</samp>eyeglasses-<samp>&lt;</samp><kbd>*</kbd>:<dfn>width|height|length</dfn><samp>&gt;</samp><samp>&lt;</samp><var>~</var><dfn>page</dfn><samp>?</samp>:<dfn>\d+</dfn><samp>&gt;</samp>.html',<br />
&nbsp;&nbsp;&nbsp;&nbsp;'eyeglasses.html',<br />
],
</code>
<p>匹配的 <strong>URL</strong> 和传递的 <strong>参数</strong> 如下：</p>
<ul>
    <li>
        <p><dfn>eyeglasses.html</dfn></p>
    </li>
    <li>
        <p><dfn>fashion-women-eyeglasses-width-140.html</dfn></p>
        <code>
        [<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'attrs'&nbsp;=&gt;&nbsp;['fashion'],<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'gender'&nbsp;=&gt;&nbsp;'women',<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'width'&nbsp;=&gt;&nbsp;140,<br />
        ]
        </code>
    </li>
    <li>
        <p><dfn>fashion-women-top10-eyeglasses-width-140-12.html</dfn></p>
        <code>
        [<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'attrs'&nbsp;=&gt;&nbsp;['fashion'],<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'gender'&nbsp;=&gt;&nbsp;'women',<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'tags'&nbsp;=&gt;&nbsp;['top10'],<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'width'&nbsp;=&gt;&nbsp;140,<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'page'&nbsp;=&gt;&nbsp;12,<br />
        ]
        </code>
    </li>
    <li>
        <p><dfn>fashion-red-women-top10-bestseller-eyeglasses-width-140-height-22-12.html</dfn></p>
        <code>
        [<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'attrs'&nbsp;=&gt;&nbsp;['fashion',&nbsp;'red'],<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'gender'&nbsp;=&gt;&nbsp;'women',<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'tags'&nbsp;=&gt;&nbsp;['top10',&nbsp;'bestseller'],<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'width'&nbsp;=&gt;&nbsp;140,<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'height'&nbsp;=&gt;&nbsp;22,<br />
        &nbsp;&nbsp;&nbsp;&nbsp;'page'&nbsp;=&gt;&nbsp;12,<br />
        ]
        </code>
    </li>
</ul>

<h2>系统保留的路由</h2>
<code>
&lt;?php<br />
<br />
return&nbsp;[<br />
&nbsp;&nbsp;&nbsp;&nbsp;'default/index'&nbsp;=&gt;&nbsp;[<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'',<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'index.php',<br />
&nbsp;&nbsp;&nbsp;&nbsp;],<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;'*/*'&nbsp;=&gt;&nbsp;'&lt;_controller:[^/]+&gt;/&lt;_action:[^/]+&gt;',<br />
];
</code>
<p>第一个是默认控制器和默认方法的路由规则：</p>
<blockquote>
    <p>当你在浏览器中输入 <dfn>example.com</dfn> 或者 <dfn>example.com/index.php</dfn> 都会匹配到 <var>default/index</var>，执行 <samp>App/Class/Controller/defaultController::indexAction()</samp></p>
</blockquote>
<p>第二个是通用路由规则 <var>class/method</var> </p>